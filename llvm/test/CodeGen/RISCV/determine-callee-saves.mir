# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 6
# RUN: llc %s -mtriple=riscv64 -run-pass=prologepilog \
# RUN: --riscv-save-csrs-early=false \
# RUN: -o - | FileCheck %s -check-prefixes=NOEARLYCSR
#
# RUN: llc %s -mtriple=riscv64 -run-pass=prologepilog \
# RUN: --riscv-save-csrs-early=false \
# RUN: --riscv-user-defined-uncond-prolog-csrs="x19" \
# RUN: -o - | FileCheck %s -check-prefixes=NOEARLYCSR_UNCONDX19
#
# RUN: llc %s -mtriple=riscv64 -run-pass=prologepilog \
# RUN: --riscv-save-csrs-early=true \
# RUN: -o - | FileCheck %s -check-prefixes=EARLYCSR
#
# RUN: llc %s -mtriple=riscv64 -run-pass=prologepilog \
# RUN: --riscv-save-csrs-early=true \
# RUN: --riscv-user-defined-uncond-prolog-csrs="x19" \
# RUN: -o - | FileCheck %s -check-prefixes=EARLYCSR_UNCONDX19
---
name:            test0
tracksRegLiveness: true
body:             |
  bb.0.entry:
    liveins: $x10
    ; NOEARLYCSR-LABEL: name: test0
    ; NOEARLYCSR: liveins: $x10, $x18
    ; NOEARLYCSR-NEXT: {{  $}}
    ; NOEARLYCSR-NEXT: $x2 = frame-setup ADDI $x2, -16
    ; NOEARLYCSR-NEXT: frame-setup CFI_INSTRUCTION def_cfa_offset 16
    ; NOEARLYCSR-NEXT: frame-setup SD killed $x18, $x2, 8 :: (store (s64) into %stack.0)
    ; NOEARLYCSR-NEXT: frame-setup CFI_INSTRUCTION offset $x18, -8
    ; NOEARLYCSR-NEXT: $x18 = LD $x10, 0 :: (load (s64))
    ; NOEARLYCSR-NEXT: $x18 = frame-destroy LD $x2, 8 :: (load (s64) from %stack.0)
    ; NOEARLYCSR-NEXT: frame-destroy CFI_INSTRUCTION restore $x18
    ; NOEARLYCSR-NEXT: $x2 = frame-destroy ADDI $x2, 16
    ; NOEARLYCSR-NEXT: frame-destroy CFI_INSTRUCTION def_cfa_offset 0
    ; NOEARLYCSR-NEXT: PseudoRET
    ;
    ; NOEARLYCSR_UNCONDX19-LABEL: name: test0
    ; NOEARLYCSR_UNCONDX19: liveins: $x10, $x18, $x19
    ; NOEARLYCSR_UNCONDX19-NEXT: {{  $}}
    ; NOEARLYCSR_UNCONDX19-NEXT: $x2 = frame-setup ADDI $x2, -16
    ; NOEARLYCSR_UNCONDX19-NEXT: frame-setup CFI_INSTRUCTION def_cfa_offset 16
    ; NOEARLYCSR_UNCONDX19-NEXT: frame-setup SD killed $x18, $x2, 8 :: (store (s64) into %stack.0)
    ; NOEARLYCSR_UNCONDX19-NEXT: frame-setup SD killed $x19, $x2, 0 :: (store (s64) into %stack.1)
    ; NOEARLYCSR_UNCONDX19-NEXT: frame-setup CFI_INSTRUCTION offset $x18, -8
    ; NOEARLYCSR_UNCONDX19-NEXT: frame-setup CFI_INSTRUCTION offset $x19, -16
    ; NOEARLYCSR_UNCONDX19-NEXT: $x18 = LD $x10, 0 :: (load (s64))
    ; NOEARLYCSR_UNCONDX19-NEXT: $x18 = frame-destroy LD $x2, 8 :: (load (s64) from %stack.0)
    ; NOEARLYCSR_UNCONDX19-NEXT: $x19 = frame-destroy LD $x2, 0 :: (load (s64) from %stack.1)
    ; NOEARLYCSR_UNCONDX19-NEXT: frame-destroy CFI_INSTRUCTION restore $x18
    ; NOEARLYCSR_UNCONDX19-NEXT: frame-destroy CFI_INSTRUCTION restore $x19
    ; NOEARLYCSR_UNCONDX19-NEXT: $x2 = frame-destroy ADDI $x2, 16
    ; NOEARLYCSR_UNCONDX19-NEXT: frame-destroy CFI_INSTRUCTION def_cfa_offset 0
    ; NOEARLYCSR_UNCONDX19-NEXT: PseudoRET
    ;
    ; EARLYCSR-LABEL: name: test0
    ; EARLYCSR: liveins: $x10
    ; EARLYCSR-NEXT: {{  $}}
    ; EARLYCSR-NEXT: $x18 = LD $x10, 0 :: (load (s64))
    ; EARLYCSR-NEXT: PseudoRET
    ;
    ; EARLYCSR_UNCONDX19-LABEL: name: test0
    ; EARLYCSR_UNCONDX19: liveins: $x10, $x19
    ; EARLYCSR_UNCONDX19-NEXT: {{  $}}
    ; EARLYCSR_UNCONDX19-NEXT: $x2 = frame-setup ADDI $x2, -16
    ; EARLYCSR_UNCONDX19-NEXT: frame-setup CFI_INSTRUCTION def_cfa_offset 16
    ; EARLYCSR_UNCONDX19-NEXT: frame-setup SD killed $x19, $x2, 8 :: (store (s64) into %stack.0)
    ; EARLYCSR_UNCONDX19-NEXT: frame-setup CFI_INSTRUCTION offset $x19, -8
    ; EARLYCSR_UNCONDX19-NEXT: $x18 = LD $x10, 0 :: (load (s64))
    ; EARLYCSR_UNCONDX19-NEXT: $x19 = frame-destroy LD $x2, 8 :: (load (s64) from %stack.0)
    ; EARLYCSR_UNCONDX19-NEXT: frame-destroy CFI_INSTRUCTION restore $x19
    ; EARLYCSR_UNCONDX19-NEXT: $x2 = frame-destroy ADDI $x2, 16
    ; EARLYCSR_UNCONDX19-NEXT: frame-destroy CFI_INSTRUCTION def_cfa_offset 0
    ; EARLYCSR_UNCONDX19-NEXT: PseudoRET
    $x18 = LD $x10, 0 :: (load (s64))
    PseudoRET

...
